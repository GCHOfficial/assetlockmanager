"""Add fields for email/password confirmation

Revision ID: 4dbdca607123
Revises: c65a10611274
Create Date: 2025-04-13 21:05:00.425826

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4dbdca607123'
down_revision = 'c65a10611274'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('apscheduler_jobs', schema=None) as batch_op:
        batch_op.drop_index('ix_apscheduler_jobs_next_run_time')

    op.drop_table('apscheduler_jobs')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('pending_email', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('pending_password_hash', sa.String(length=256), nullable=True))
        batch_op.add_column(sa.Column('confirmation_token', sa.String(length=256), nullable=True))
        batch_op.add_column(sa.Column('token_expiration', sa.DateTime(), nullable=True))
        batch_op.create_index(batch_op.f('ix_user_confirmation_token'), ['confirmation_token'], unique=True)
        batch_op.create_unique_constraint(None, ['pending_email'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_index(batch_op.f('ix_user_confirmation_token'))
        batch_op.drop_column('token_expiration')
        batch_op.drop_column('confirmation_token')
        batch_op.drop_column('pending_password_hash')
        batch_op.drop_column('pending_email')

    op.create_table('apscheduler_jobs',
    sa.Column('id', sa.VARCHAR(length=191), autoincrement=False, nullable=False),
    sa.Column('next_run_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('job_state', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='apscheduler_jobs_pkey')
    )
    with op.batch_alter_table('apscheduler_jobs', schema=None) as batch_op:
        batch_op.create_index('ix_apscheduler_jobs_next_run_time', ['next_run_time'], unique=False)

    # ### end Alembic commands ###
