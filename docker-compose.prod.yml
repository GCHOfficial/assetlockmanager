services:
  alm-frontend:
    # Use pre-built image defined by FRONTEND_IMAGE env var
    image: ${FRONTEND_IMAGE}
    # BUILD section removed for production image deployment
    container_name: lock_frontend
    networks:
      - alm
    ports:
      - "8080:80" # Map host 8080 to container 80 (Nginx)
    depends_on:
      - alm-api # Ensures API is started before frontend tries to proxy requests

  alm-api:
    # Use pre-built image defined by API_IMAGE env var
    image: ${API_IMAGE}
    # BUILD section removed for production image deployment
    container_name: lock_api
    networks:
      - alm
    env_file:
      - .env # Load environment variables from .env file; use stack.env for Portainer
    environment:
      # Make Flask CLI find the app
      FLASK_APP: app.py 
      # Construct DATABASE_URI from .env variables
      DATABASE_URI: postgresql://${POSTGRES_USER:-locks_user}:${POSTGRES_PASSWORD:-password}@alm-postgres:5432/${POSTGRES_DB:-locks_db}
      # RATELIMIT_STORAGE_URI is already set in .env
      # Optional JWT expiration and Initial Admin vars are also loaded from .env if set
    depends_on:
      alm-postgres:
        condition: service_healthy
      alm-redis:
        condition: service_started
    volumes:
      # Logs volume is still useful in production
      - api_logs:/app/logs

  alm-postgres:
    image: postgres:15-alpine # Using version 15 alpine image
    container_name: lock_db
    networks:
      - alm
    env_file:
      - .env # Load POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB; use stack.env for Portainer
    volumes:
      - pgdata:/var/lib/postgresql/data # Persist data
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-locks_user} -d ${POSTGRES_DB:-locks_db}"]
        interval: 10s
        timeout: 5s
        retries: 5

  alm-redis:
    image: redis:7-alpine # Using version 7 alpine image
    container_name: lock_redis
    networks:
      - alm
    volumes:
      - redisdata:/data # Persist data

volumes:
  pgdata:
  redisdata:
  api_logs: # Define the log volume if used above 

networks:
  alm:
